from datetime import datetime
import requests

from django.utils import timezone
from environs import Env

env = Env()
env.read_env()

tg_bot_token = env("TELEGRAM_BOT_TOKEN")
tg_chat_id = env("TELEGRAM_CHAT_ID", None)


def send_telegram_notification(order):
    if not tg_chat_id:
        print("TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return
    delivery_datetime = timezone.make_aware(
        datetime.combine(order.delivery_date, order.delivery_time)
    )
    formatted_delivery_datetime = delivery_datetime.strftime("%d.%m.%Y %H:%M")

    message = (
        "üéÇ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Ç–æ—Ä—Ç–∞!*\n"
        f"üÜî –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order.id}\n"
        "üë§ *–ö–ª–∏–µ–Ω—Ç:*\n"
        f"‚Ä¢ –ò–º—è: {order.client.name}\n"
        f"‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {order.client.phone}\n"
        f"‚Ä¢ Email: {order.client.email or '–Ω–µ—Ç'}\n\n"
        "üì¶ *–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:*\n"
        f"‚Ä¢ –£—Ä–æ–≤–Ω–µ–π: {order.cake.get_levels_display()}\n"
        f"‚Ä¢ –§–æ—Ä–º–∞: {order.cake.get_shape_display()}\n"
        f"‚Ä¢ –¢–æ–ø–ø–∏–Ω–≥: {order.cake.get_topping_display()}\n"
        f"‚Ä¢ –ê–¥—Ä–µ—Å: {order.address}\n"
        f"‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order.comment or '–Ω–µ—Ç'}\n"
        f"üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {formatted_delivery_datetime}\n"
        f"üíµ –°—É–º–º–∞: {order.total_price} —Ä—É–±."
    )

    keyboard = {"inline_keyboard": []}

    try:
        response = requests.post(
            f"https://api.telegram.org/bot{tg_bot_token}/sendMessage",
            json={
                "chat_id": tg_chat_id,
                "text": message,
                "parse_mode": "Markdown",
                "reply_markup": keyboard,
            },
            timeout=5,
        )
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
